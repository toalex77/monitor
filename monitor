#!/bin/bash

# https://askubuntu.com/questions/30147/command-to-determine-whether-a-fullscreen-application-is-running
# https://askubuntu.com/questions/551109/how-to-black-out-screen-when-watching-video-playing-game-on-other-screen
# https://askubuntu.com/questions/584688/how-can-i-get-the-monitor-resolution-using-the-command-line

which="$(which which)" || exit
basename="$($which basename)" || exit
xrandr="$($which xrandr)" || exit
xdotool="$($which xdotool)" || exit
xwininfo="$($which xwininfo)" || exit
xdpyinfo="$($which xdpyinfo)" || exit
grep="$($which grep)" || exit
sed="$($which sed)" || exit
egrep="$($which egrep)" || exit
awk="$($which awk)" || exit
cut="$($which cut)" || exit
getopt="$($which getopt)" || exit
bc="$($which bc)" || exit
tr="$($which tr)" || exit

SELF="$( $basename "$0" )"
PARSED=$( $getopt --quiet --options=b:m:dhl --longoptions=brightness:,monitor:debug,help,list-monitors --name="$SELF" -- "$@" )

eval set -- "$PARSED"

LIST_MONITORS=0
DEBUG=0
BRIGHTNESS=1
HELP=0
MONITOR=( $($xrandr | $grep "\ connected\ " | $cut -d " " -f 1) )
MONITORS_OFF=""

while true; do
  case "$1" in
    -l|--list-monitors)
      LIST_MONITORS=1
      ;;
    -d|--debug)
      DEBUG=1
      ;;
    -m|--monitors)
      MONITORS_OFF=( $(echo "${2}" | $tr "," " ") )
      for m in ${MONITORS_OFF[@]}; do
        if [[ ! " ${MONITOR[@]} " =~ " ${m} " ]]; then
          echo "Specified monitor ${m} not found."
          exit
        fi
      done
      shift
      ;;
    -b|--brightness)
      if [ "$DEBUG" -eq 1 ]; then
        echo "$2"
        echo "$2 >= 0.0" | $bc 2> /dev/null
        echo "$2 <= 1.0" | $bc 2> /dev/null
      fi
      if [ "$(echo "$2 >= 0.0" | $bc 2> /dev/null)" == "1" -a "$(echo "$2 <= 1.0" | $bc 2>/dev/null)" == "1" ]; then
        BRIGHTNESS="$2"
      else
        echo "Brightness value must be a floting point value from 0 to 1 range."
        exit
      fi
      shift
      ;;
    -h|--help)
      HELP=1
      ;;
    --)
      shift
      break
      ;;
    *)
      HELP=1
      ;;
  esac
  shift
done

if [ "${HELP}" -eq 1 ]; then
  echo "A simple script to dim any other monitor except the one with the full screen current application, in a multi-monitor setup."
  echo
  echo "Usage: ${SELF} [-b|--brightness brightness] [-h|--help] [-d|--debug]"
  echo
  echo " -b, --brightness"
  echo "        Set the brightness level for the monitors that should go dimmed. Accepted values are floating point from 0 to 1."
  echo
  echo " -d, --debug"
  echo "        Turn on debug messages."
  echo
  echo " -l, --list-monitors"
  echo "        Show currently connected monitors."
  echo
  echo " -m, --monitors"
  echo "        Specify wich monitors to set the breghtenss level. Multiple monitors, must be separated by commas (\",\")."
  echo
  echo " -h, --help"
  echo "        Show this help."
  exit
fi

if [ ${LIST_MONITORS} -eq 1 ]; then
  echo "${MONITOR[@]}"
  exit
fi

if [ "$#" -eq 1 -a "$1" == "on" ]; then
  for monitor in ${MONITOR[@]} ; do
    $xrandr --output "${monitor}" --brightness 1
  done
  exit
fi

while read brightness
do
  if [ "$brightness" != "1.0" ]; then
    for monitor in ${MONITOR[@]} ; do
      $xrandr --output "${monitor}" --brightness 1
    done
    exit
  fi
done < <($xrandr --verbose | $awk '/Brightness/ { print $2; }')

RESOLUTIONS=( $($xrandr | $sed -ne "s/.*\ connected\ \(primary \)\?\([[:digit:]]\+x[[:digit:]]\+\)+[[:digit:]]\++[[:digit:]]\+\ .*/\2/p") )
OFFSETS=( $($xrandr | $sed -ne "s/.*\ connected\ \(primary \)\?[[:digit:]]\+x[[:digit:]]\+\(+[[:digit:]]\++[[:digit:]]\+\)\ .*/\2/p") )

WINDOW_SIZE="$(echo $($xwininfo -id $($xdotool getactivewindow) -stats | \
                $egrep '(Width|Height):' | \
                $awk '{print $NF}') | \
                $sed -e 's/ /x/')"

WINDOW_POSITION="$(echo $($xwininfo -id $($xdotool getactivewindow) -stats | \
                $egrep '(Absolute upper-left X|Absolute upper-left Y):' | \
                $awk '{print $NF}') | \
                $sed -e 's/\([[:digit:]]\+\) \([[:digit:]]\)\+/+\1+\2/')"

if [ "$DEBUG" -eq 1 ]; then
  echo "-----"
  echo "${MONITOR[@]}"
  echo $WINDOW_SIZE
  echo $WINDOW_POSITION
  echo ${RESOLUTIONS[@]}
  echo ${OFFSETS[@]}
  echo "-----"
fi
if [ -n "${MONITORS_OFF}" ]; then
  for monitor_off in "${MONITORS_OFF[@]}"; do
        if [ "$DEBUG" -eq 1 ]; then
          echo "${monitor_off}" "${BRIGHTNESS}"
        fi
        $xrandr --output "${monitor_off}" --brightness "${BRIGHTNESS}"
  done
  exit
fi

for monitor in "${!MONITOR[@]}"; do
  if [ "$WINDOW_SIZE" == "${RESOLUTIONS[${monitor}]}" -a "$WINDOW_POSITION" == "${OFFSETS[${monitor}]}" ]; then
    for monitor_off in "${!MONITOR[@]}"; do
      if [ "$monitor" != "$monitor_off" ]; then
        if [ "$DEBUG" -eq 1 ]; then
          echo "${MONITOR[${monitor_off}]}" "${BRIGHTNESS}"
        fi
        $xrandr --output "${MONITOR[${monitor_off}]}" --brightness "${BRIGHTNESS}"
      fi
    done
  fi
done
